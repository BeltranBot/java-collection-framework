package com.cf07.sorting_lists_using_comparators;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

class StringLengthComparator implements Comparator<String> {
	public int compare(String s1, String s2) {
		int len1 = s1.length();
		int len2 = s2.length();

		if (len1 > len2) {
			return 1;
		} else if (len1 < len2) {
			return -1;
		}
		return 0;
	}
}

class AlphabeticalComparator implements Comparator<String> {
	public int compare(String s1, String s2) {
		return s1.compareTo(s2);
	}
}

class ReverseAlphabeticalComparator implements Comparator<String> {
	public int compare(String s1, String s2) {
		return s2.compareTo(s1);
	}
}

class Person {
	private int id;
	private String name;
	
	public Person(int id, String name) {
		this.id = id;
		this.name = name;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	public String toString() {
		return name;
	}
}

public class App {
	public static void main(String[] args) {
		/////////////// Sorting Strings /////////////////////////
		List<String> animals = new ArrayList<String>();
		animals.add("cat");
		animals.add("elephant");
		animals.add("tiger");
		animals.add("lion");
		animals.add("snake");
		animals.add("mongoose");
		animals.add("horse");

		// Collections.sort(animals, new StringLengthComparator());
		Collections.sort(animals, new ReverseAlphabeticalComparator());

		for (String animal : animals) {
			System.out.println(animal);
		}

		///////////// Sorting Numbers /////////////////////////

		List<Integer> numbers = new ArrayList<Integer>();

		numbers.add(3);
		numbers.add(1);
		numbers.add(36);
		numbers.add(73);
		numbers.add(40);
		numbers.add(50);

		Collections.sort(numbers, new Comparator<Integer>() {
			public int compare(Integer n1, Integer n2) {
				return -n1.compareTo(n2);
			}
		});

		for (Integer number : numbers) {
			System.out.println(number);

		}

		///////////// Sorting Arbitrary Objects /////////////////////////
		
		

	}

}
